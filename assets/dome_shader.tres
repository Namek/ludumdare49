[gd_resource type="VisualShader" load_steps=39 format=2]

[ext_resource path="res://assets/dome_noise.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarFunc" id=1]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeScalarOp" id=2]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.05 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=3]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=4]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 0.4, 0.8 ) ]

[sub_resource type="VisualShaderNodeColorConstant" id=5]
constant = Color( 0.0352941, 0.152941, 1, 1 )

[sub_resource type="VisualShaderNodeFresnel" id=6]
output_port_for_preview = 0
default_input_values = [ 2, false, 3, 3.0 ]

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "view"

[sub_resource type="VisualShaderNodeScalarOp" id=9]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=12]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeBooleanUniform" id=13]
uniform_name = "dissolve"

[sub_resource type="VisualShaderNodeSwitch" id=14]
output_port_for_preview = 0
default_input_values = [ 0, true, 1, Vector3( 1, 1, 1 ), 2, Vector3( 1, 1, 1 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=15]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=16]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=17]
uniform_name = "dissolve_level"

[sub_resource type="VisualShaderNodeScalarFunc" id=18]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=19]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=20]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=21]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=22]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=23]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=24]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=25]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=26]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 10.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=27]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeColorConstant" id=28]
constant = Color( 0.0665932, 0.262917, 0.741211, 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=29]
constant = Color( 0.902344, 0, 0, 1 )

[sub_resource type="VisualShaderNodeScalarFunc" id=30]
output_port_for_preview = 0
default_input_values = [ 0, 1.0 ]
function = 31

[sub_resource type="VisualShaderNodeVectorOp" id=31]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=32]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=33]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=34]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeTexture" id=35]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=36]
output_port_for_preview = 0
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=37]
output_port_for_preview = 0
function = 15

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, shadows_disabled;

uniform float dissolve_level;
uniform bool dissolve;
uniform sampler2D tex_frg_7;



void vertex() {
// Output:0

}

void fragment() {
// Color:52
	vec3 n_out52p0 = vec3(0.902344, 0.000000, 0.000000);
	float n_out52p1 = 1.000000;

// ScalarUniform:39
	float n_out39p0 = dissolve_level;

// ScalarOp:57
	float n_in57p1 = 0.00000;
	float n_out57p0 = n_out39p0 + n_in57p1;

// VectorOp:55
	vec3 n_out55p0 = n_out52p0 * vec3(n_out57p0);

// ScalarFunc:53
	float n_out53p0 = 1.0 - n_out57p0;

// Color:50
	vec3 n_out50p0 = vec3(0.066593, 0.262917, 0.741211);
	float n_out50p1 = 1.000000;

// VectorOp:56
	vec3 n_out56p0 = vec3(n_out53p0) * n_out50p0;

// VectorOp:54
	vec3 n_out54p0 = n_out55p0 + n_out56p0;

// Input:16
	vec3 n_out16p0 = NORMAL;

// Input:17
	vec3 n_out17p0 = VIEW;

// Fresnel:15
	float n_in15p3 = 3.00000;
	float n_out15p0 = pow(1.0 - clamp(dot(n_out16p0, n_out17p0), 0.0, 1.0), n_in15p3);

// VectorOp:30
	vec3 n_out30p0 = n_out50p0 + vec3(n_out15p0);

// VectorOp:38
	vec3 n_out38p0 = n_out54p0 * n_out30p0;

// BooleanUniform:31
	bool n_out31p0 = dissolve;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, n_out2p0.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// ScalarOp:41
	float n_in41p1 = 0.50000;
	float n_out41p0 = n_out57p0 - n_in41p1;

// ScalarOp:42
	float n_in42p1 = 2.00000;
	float n_out42p0 = n_out41p0 / n_in42p1;

// ScalarOp:8
	float n_out8p0 = dot(n_out7p0, vec3(0.333333, 0.333333, 0.333333)) - n_out42p0;

// ScalarFunc:9
	float n_out9p0 = round(n_out8p0);

// ScalarOp:11
	float n_in11p1 = 0.05000;
	float n_out11p0 = n_out8p0 - n_in11p1;

// ScalarOp:12
	float n_in12p0 = 1.00000;
	float n_out12p0 = n_in12p0 - n_out11p0;

// ScalarFunc:10
	float n_out10p0 = round(n_out12p0);

// Color:14
	vec3 n_out14p0 = vec3(0.035294, 0.152941, 1.000000);
	float n_out14p1 = 1.000000;

// VectorOp:13
	vec3 n_out13p0 = vec3(n_out10p0) + n_out14p0;

// ScalarOp:18
	float n_out18p0 = n_out9p0 * dot(n_out13p0, vec3(0.333333, 0.333333, 0.333333));

// VectorSwitch:34
	vec3 n_in34p2 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out34p0;
	if(n_out31p0)
	{
		n_out34p0 = vec3(n_out18p0);
	}
	else
	{
		n_out34p0 = n_in34p2;
	}

// VectorOp:35
	vec3 n_out35p0 = n_out34p0 * vec3(n_out15p0);

// Output:0
	ALBEDO = n_out38p0;
	ALPHA = dot(n_out35p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -915.4, -705.85 )
flags/shadows_disabled = true
nodes/fragment/0/position = Vector2( 1580, -40 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( -1180, 20 )
nodes/fragment/3/node = SubResource( 11 )
nodes/fragment/3/position = Vector2( -2080, 120 )
nodes/fragment/4/node = SubResource( 18 )
nodes/fragment/4/position = Vector2( -1540, 360 )
nodes/fragment/5/node = SubResource( 27 )
nodes/fragment/5/position = Vector2( -1340, 360 )
nodes/fragment/7/node = SubResource( 35 )
nodes/fragment/7/position = Vector2( -980, 100 )
nodes/fragment/8/node = SubResource( 36 )
nodes/fragment/8/position = Vector2( -800, 320 )
nodes/fragment/9/node = SubResource( 37 )
nodes/fragment/9/position = Vector2( -580, 320 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -360, 620 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -680, 620 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -520, 640 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -140, 620 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -280, 820 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( -120, -40 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( -420, -60 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( -420, 0 )
nodes/fragment/18/node = SubResource( 9 )
nodes/fragment/18/position = Vector2( 60, 360 )
nodes/fragment/30/node = SubResource( 12 )
nodes/fragment/30/position = Vector2( 240, -60 )
nodes/fragment/31/node = SubResource( 13 )
nodes/fragment/31/position = Vector2( 40, 240 )
nodes/fragment/34/node = SubResource( 14 )
nodes/fragment/34/position = Vector2( 320, 340 )
nodes/fragment/35/node = SubResource( 15 )
nodes/fragment/35/position = Vector2( 500, 80 )
nodes/fragment/38/node = SubResource( 16 )
nodes/fragment/38/position = Vector2( 1080, -160 )
nodes/fragment/39/node = SubResource( 17 )
nodes/fragment/39/position = Vector2( -2080, 20 )
nodes/fragment/41/node = SubResource( 19 )
nodes/fragment/41/position = Vector2( -1460, 660 )
nodes/fragment/42/node = SubResource( 20 )
nodes/fragment/42/position = Vector2( -1280, 660 )
nodes/fragment/44/node = SubResource( 21 )
nodes/fragment/44/position = Vector2( 920, 900 )
nodes/fragment/45/node = SubResource( 22 )
nodes/fragment/45/position = Vector2( 80, 960 )
nodes/fragment/46/node = SubResource( 23 )
nodes/fragment/46/position = Vector2( 420, 900 )
nodes/fragment/47/node = SubResource( 24 )
nodes/fragment/47/position = Vector2( 600, 900 )
nodes/fragment/48/node = SubResource( 25 )
nodes/fragment/48/position = Vector2( 760, 900 )
nodes/fragment/49/node = SubResource( 26 )
nodes/fragment/49/position = Vector2( 260, 940 )
nodes/fragment/50/node = SubResource( 28 )
nodes/fragment/50/position = Vector2( 260, -220 )
nodes/fragment/52/node = SubResource( 29 )
nodes/fragment/52/position = Vector2( 240, -700 )
nodes/fragment/53/node = SubResource( 30 )
nodes/fragment/53/position = Vector2( -400, -700 )
nodes/fragment/54/node = SubResource( 31 )
nodes/fragment/54/position = Vector2( 820, -480 )
nodes/fragment/55/node = SubResource( 32 )
nodes/fragment/55/position = Vector2( 420, -680 )
nodes/fragment/56/node = SubResource( 33 )
nodes/fragment/56/position = Vector2( 420, -460 )
nodes/fragment/57/node = SubResource( 34 )
nodes/fragment/57/position = Vector2( -700, -500 )
nodes/fragment/connections = PoolIntArray( 2, 0, 7, 0, 7, 0, 8, 0, 8, 0, 9, 0, 8, 0, 11, 0, 11, 0, 12, 1, 12, 0, 10, 0, 10, 0, 13, 0, 9, 0, 18, 0, 13, 0, 18, 1, 16, 0, 15, 0, 17, 0, 15, 1, 15, 0, 30, 1, 18, 0, 34, 1, 34, 0, 35, 0, 15, 0, 35, 1, 30, 0, 38, 1, 31, 0, 34, 0, 4, 0, 5, 0, 3, 0, 4, 0, 41, 0, 42, 0, 46, 0, 47, 0, 47, 0, 48, 0, 48, 0, 44, 0, 45, 0, 49, 0, 49, 0, 46, 0, 14, 0, 13, 1, 38, 0, 0, 0, 35, 0, 0, 1, 42, 0, 8, 1, 55, 0, 54, 0, 50, 0, 56, 1, 56, 0, 54, 1, 50, 0, 30, 0, 52, 0, 55, 0, 53, 0, 56, 0, 39, 0, 57, 0, 57, 0, 41, 0, 57, 0, 53, 0, 57, 0, 55, 1, 54, 0, 38, 0 )
